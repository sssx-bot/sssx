import fs from "fs";
import path from "path";
import { uniqueFilter } from "./uniqueFilter";
import { Config } from "./config";
import { globby } from "globby";
import { SSSX_FILES_INDEX } from "./constants";
import { loadExistingURLs } from "./writeURLsIndex";

const removeFiles = (files: string[], urls: string[]) => {
  let array: string[] = files;

  return array;
};

// TODO: figure out removal of the files here
export const writeFilesIndex = async (cwd: string, config: Config) => {
  const dir = `${cwd}/${config.outDir}`;
  const files = (await globby(`${dir}/**/*`)).map((a) => a.replace(dir, ""));
  const urls = await loadExistingURLs(cwd);

  let array = files;
  const fullpath = path.normalize(`${cwd}/${SSSX_FILES_INDEX}`);
  if (fs.existsSync(fullpath)) {
    const module = await import(fullpath);
    array = [...files, ...module.files].filter(uniqueFilter);
  }

  // array = array.sort();
  array = removeFiles(array, urls).sort();

  let data = `// Do not edit! this file was automatically generated by SSSX\n`;
  data += `export const files = [\n`;
  array.map((file) => {
    data += `"${file}",\n`;
  });
  data += `];\n`;
  fs.writeFileSync(fullpath, data, "utf8");
};
